{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["children","data","style","margin","maxWidth","padding","to","site","siteMetadata","title","console","log","allMarkdownRemark","totalCount","edges","map","node","key","id","fields","slug","frontmatter","changeTime","excerpt","query","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","StaticQuery","props","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"+PAGe,gBAAmB,IAAhBA,EAAe,EAAfA,SAEVC,EAAI,OAWV,OACA,yBAAKC,MAAO,CAAEC,OAAO,YAAcC,SAAU,IAAKC,QAAQ,WACpD,4BAAI,kBAAC,IAAD,CAAMC,GAAG,KAAKL,EAAKM,KAAKC,aAAaC,QACxCT,K,kCCnBT,8FAIe,sBAAe,IAAZC,EAAW,EAAXA,KAEhB,OADAS,QAAQC,IAAIV,GAEV,kBAAC,IAAD,KACE,6BACE,4BAAKA,EAAKW,kBAAkBC,WAA5B,UACCZ,EAAKW,kBAAkBE,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAEhC,yBAAKC,IAAKD,EAAKE,IACb,kBAAC,IAAD,CAAMZ,GAAIU,EAAKG,OAAOC,MACtB,4BACGJ,EAAKK,YAAYZ,MAAO,IACzB,mCACKO,EAAKG,OAAOG,aAGnB,2BAAIN,EAAKO,iBASd,IAAMC,EAAK,c,kCC7BlB,wIAcyBC,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiB9B,EAAuB,EAAvBA,KAAMuB,EAAiB,EAAjBA,MAAOQ,EAAU,EAAVA,OACzDC,EAAYhC,EACdA,EAAKA,KACL8B,EAAgBP,IAAUO,EAAgBP,GAAOvB,KAErD,OACE,kBAAC,IAAMiC,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAa,uDAKrB,IAAME,EAAc,SAAAC,GAAU,IACpBnC,EAAkCmC,EAAlCnC,KAAMuB,EAA4BY,EAA5BZ,MAAOQ,EAAqBI,EAArBJ,OAAQhC,EAAaoC,EAAbpC,SAE7B,OACE,kBAAC2B,EAAmBU,SAApB,MACG,SAAAN,GAAe,OACd,kBAACD,EAAD,CACE7B,KAAMA,EACNuB,MAAOA,EACPQ,OAAQA,GAAUhC,EAClB+B,gBAAiBA,S,qBCzC3B,IAAsBO,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEjB,IAAMkB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-index-js-6ff0020d49ace83d5d5a.js","sourcesContent":["import React from \"react\"\r\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\r\n\r\nexport default ({ children }) => {\r\n  // ページコンポーネントではないのでスタティッククエリ\r\n  const data = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n  return (\r\n  <div style={{ margin: `3rem auto`, maxWidth: 650, padding: `0 1rem` }}>\r\n        <h1><Link to='/'>{data.site.siteMetadata.title}</Link></h1>\r\n        {children}\r\n  </div>\r\n)\r\n  }","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\n\r\nexport default ({ data }) => {\r\n  console.log(data)\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\r\n        {data.allMarkdownRemark.edges.map(({ node }) => (\r\n\r\n          <div key={node.id}>\r\n            <Link to={node.fields.slug}>\r\n            <h3>\r\n              {node.frontmatter.title}{\" \"}\r\n              <span>\r\n                — {node.fields.changeTime}\r\n              </span>\r\n            </h3>\r\n            <p>{node.excerpt}</p>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: [fields___birthTime], order: DESC }) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n          }\r\n            fields {\r\n                slug\r\n                birthTime(formatString: \"DD MMMM, YYYY\")\r\n                changeTime(formatString: \"DD MMMM, YYYY\")\r\n            }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}