{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["data","library","add","fas","class","allMarkdownRemark","edges","map","node","to","fields","slug","frontmatter","title","icon","birthTime","changeTime","tags","tag","kebabCase","excerpt","query"],"mappings":"2FAAA,uJAQe,sBAAe,IAAZA,EAAW,EAAXA,KAGhB,OAFAC,IAAQC,IAAIC,KAGV,kBAAC,IAAD,KACE,yBAAKC,MAAM,wBACT,yBAAKA,MAAM,WACRJ,EAAKK,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,yBAAKJ,MAAM,SACT,yBAAKA,MAAM,eACT,4BACE,kBAAC,IAAD,CAAMK,GAAID,EAAKE,OAAOC,MAAOH,EAAKI,YAAYC,MAA9C,OAGJ,yBAAKT,MAAM,cACT,0BAAMA,MAAM,QACV,kBAAC,IAAD,CAAiBU,KAAM,CAAC,MAAO,WAC/B,0BAAMV,MAAM,cAAcI,EAAKE,OAAOK,YAExC,0BAAMX,MAAM,QACV,kBAAC,IAAD,CAAiBU,KAAM,CAAC,MAAO,aAC/B,0BAAMV,MAAM,uBACTI,EAAKE,OAAOM,aAIjB,yBAAKZ,MAAM,QACRI,EAAKI,YAAYK,KAAKV,KAAI,SAAAW,GAAG,OAC5B,0BAAMd,MAAM,OACV,kBAAC,IAAD,CAAiBU,KAAM,CAAC,MAAO,SAC/B,kBAAC,IAAD,CAAML,GAAE,SAAWU,IAAUD,GAArB,KAA+BA,SAM/C,yBAAKd,MAAM,iBACT,2BAAII,EAAKY,kBAUlB,IAAMC,EAAK","file":"component---src-pages-index-js-f540ebf2104a7d6bef9d.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport kebabCase from \"lodash/kebabCase\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nexport default ({ data }) => {\r\n  library.add(fas) // FontAwesomeのライブラリ読み込み\r\n\r\n  return (\r\n    <Layout>\r\n      <div class=\"content-sidebar-wrap\">\r\n        <div class=\"content\">\r\n          {data.allMarkdownRemark.edges.map(({ node }) => (\r\n            <div class=\"entry\">\r\n              <div class=\"entry-title\">\r\n                <h2>\r\n                  <Link to={node.fields.slug}>{node.frontmatter.title} </Link>\r\n                </h2>\r\n              </div>\r\n              <div class=\"entry-meta\">\r\n                <span class=\"time\">\r\n                  <FontAwesomeIcon icon={[\"fas\", \"clock\"]} />\r\n                  <time class=\"entry-time\">{node.fields.birthTime}</time>\r\n                </span>\r\n                <span class=\"time\">\r\n                  <FontAwesomeIcon icon={[\"fas\", \"history\"]} />\r\n                  <time class=\"entry-modified-time\">\r\n                    {node.fields.changeTime}\r\n                  </time>\r\n                </span>\r\n\r\n                <div class=\"tags\">\r\n                  {node.frontmatter.tags.map(tag => (\r\n                    <span class=\"tag\">\r\n                      <FontAwesomeIcon icon={[\"fas\", \"tag\"]} />\r\n                      <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"entry-content\">\r\n                <p>{node.excerpt}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: [fields___birthTime], order: DESC }) {\r\n      totalCount\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            tags\r\n          }\r\n          fields {\r\n            slug\r\n            birthTime(formatString: \"YYYY/MM/DD/\")\r\n            changeTime(formatString: \"YYYY/MM/DD/\")\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}